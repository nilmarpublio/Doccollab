# COMANDO DE DIAGN√ìSTICO PARA PYTHONANYWHERE
# Copie e cole este comando no console do PythonAnywhere

cd ~/doccollab && source venv/bin/activate && echo "üîç DIAGN√ìSTICO COMPLETO DO PYTHONANYWHERE" && echo "======================================" && echo "1. Verificando diret√≥rio atual:" && pwd && echo "2. Verificando arquivos essenciais:" && ls -la app.py wsgi.py requirements.txt babel.cfg 2>/dev/null || echo "‚ùå Alguns arquivos essenciais n√£o encontrados" && echo "3. Verificando ambiente virtual:" && python --version && echo "4. Verificando depend√™ncias:" && pip list | grep -E "(flask|requests|babel)" && echo "5. Verificando tradu√ß√µes:" && ls -la translations/ 2>/dev/null || echo "‚ùå Diret√≥rio translations n√£o encontrado" && echo "6. Testando importa√ß√µes b√°sicas:" && python -c "import flask; print('‚úÖ Flask OK')" 2>/dev/null || echo "‚ùå Flask erro" && python -c "import requests; print('‚úÖ Requests OK')" 2>/dev/null || echo "‚ùå Requests erro" && python -c "import flask_babel; print('‚úÖ Babel OK')" 2>/dev/null || echo "‚ùå Babel erro" && echo "7. Testando aplica√ß√£o:" && python -c "from app import create_app; app, socketio = create_app(); print('‚úÖ App OK')" 2>/dev/null || echo "‚ùå App erro" && echo "8. Verificando logs de erro:" && tail -10 /var/log/123nilmarcastro.pythonanywhere.com.error.log 2>/dev/null || echo "‚ùå Log de erro n√£o encontrado" && echo "======================================" && echo "‚úÖ DIAGN√ìSTICO CONCLU√çDO!"
