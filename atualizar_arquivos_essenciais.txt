# ATUALIZAR ARQUIVOS ESSENCIAIS NO PYTHONANYWHERE
# Copie e cole este comando no console do PythonAnywhere

cd ~/doccollab && source venv/bin/activate && echo "Atualizando arquivos essenciais..." && git pull origin main && pip install requests==2.32.5 flask-socketio && mkdir -p services && cat > services/asaas_integration.py << 'EOF'
def get_plan_config(plan_type):
    plans = {
        'free': {'name': 'Free', 'price_brl': 0, 'price_usd': 0, 'features': ['1 project', '1 file']},
        'monthly': {'name': 'Monthly', 'price_brl': 10, 'price_usd': 2, 'features': ['Unlimited projects']},
        'quarterly': {'name': 'Quarterly', 'price_brl': 25, 'price_usd': 5, 'features': ['Unlimited projects']},
        'semi_annual': {'name': 'Semi-Annual', 'price_brl': 50, 'price_usd': 10, 'features': ['Unlimited projects']},
        'annual': {'name': 'Annual', 'price_brl': 100, 'price_usd': 20, 'features': ['Unlimited projects']}
    }
    return plans.get(plan_type, {})

def get_currency_for_locale(locale):
    return 'BRL' if locale == 'pt' else 'USD'
EOF
pybabel compile -d translations -D messages && sed -i 's/app, socketio = create_app()/app = create_app()/g' /var/www/123nilmarcastro_pythonanywhere_com_wsgi.py && python -c "from app import create_app; app = create_app(); print('App OK')" && echo "Agora va para a aba Web e clique em Reload"
